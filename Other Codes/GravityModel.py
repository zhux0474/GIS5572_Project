# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2022-05-13 09:20:28
"""
import arcpy
from arcpy.ia import *

def Model():  # Model

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = False

    # Check out any necessary licenses.
    arcpy.CheckOutExtension("spatial")
    arcpy.CheckOutExtension("3D")
    arcpy.CheckOutExtension("ImageAnalyst")

    arcpy.ImportToolbox(r"c:\program files\arcgis\pro\Resources\ArcToolbox\toolboxes\Data Management Tools.tbx")
    arcpy.ImportToolbox(r"C:\Users\hossa084\Downloads\ArcII\lab4\Gravity\GravityModeling.tbx")
    # Model Environment settings
    with arcpy.EnvManager(scratchWorkspace=r"C:\Users\hossa084\Downloads\ArcII\lab2\files\lab2\lab2.gdb", workspace=r"C:\Users\hossa084\Downloads\ArcII\lab2\files\lab2\lab2.gdb"):
        Population_city_township_boundaries = "city_township_unorg"
        Elevation_Tempreturer_stations = "stations"
        maxtemperature = "maxtemperature"
        NLCD_2019_Land_Cover_tif_Band_1 = arcpy.Raster("NLCD_2019_Land_Cover.tif_Band_1")
        NLCD_2016_Land_Cover = arcpy.Raster("NLCD 2016 - Land Cover")
        BMSBSurveyDataTable = "BMSBSurveyDataTable"
        city_township_boundaries = "city_township_unorg"

        # Process: Validate Join (Validate Join) (management)
        join1 = "C:\\Users\\hossa084\\Downloads\\ArcII\\lab2\\files\\lab2\\lab2.gdb\\join1"
        with arcpy.EnvManager(scratchWorkspace=r"C:\Users\hossa084\Downloads\ArcII\lab2\files\lab2\lab2.gdb", workspace=r"C:\Users\hossa084\Downloads\ArcII\lab2\files\lab2\lab2.gdb"):
            Match_Count, Row_Count = arcpy.management.ValidateJoin(in_layer_or_view=Elevation_Tempreturer_stations, in_field="stations.station", join_table=maxtemperature, join_field="station", output_msg=join1)

        # Process: Join Field (3) (Join Field) (management)
        with arcpy.EnvManager(scratchWorkspace=r"C:\Users\hossa084\Downloads\ArcII\lab2\files\lab2\lab2.gdb", workspace=r"C:\Users\hossa084\Downloads\ArcII\lab2\files\lab2\lab2.gdb"):
            stations_3_ = arcpy.management.JoinField(in_data=Population_city_township_boundaries, in_field="stations.Id", join_table=join1, join_field="station", fields=[])[0]

        # Process: Extract by Mask (2) (Extract by Mask) (sa)
        Extract_NLCD2_2_ = "C:\\Users\\hossa084\\Downloads\\ArcII\\lab2\\files\\lab2\\lab2.gdb\\Extract_NLCD2"
        Extract_by_Mask_2_ = Extract_NLCD2_2_
        with arcpy.EnvManager(scratchWorkspace=r"C:\Users\hossa084\Downloads\ArcII\lab2\files\lab2\lab2.gdb", workspace=r"C:\Users\hossa084\Downloads\ArcII\lab2\files\lab2\lab2.gdb"):
            Extract_NLCD2_2_ = arcpy.sa.ExtractByMask(in_raster=NLCD_2019_Land_Cover_tif_Band_1, in_mask_data=Population_city_township_boundaries)
            Extract_NLCD2_2_.save(Extract_by_Mask_2_)


        # Process: Extract by Mask (Extract by Mask) (sa)
        Extract_NLCD2 = "C:\\Users\\hossa084\\Downloads\\ArcII\\lab2\\files\\lab2\\lab2.gdb\\Extract_NLCD2"
        Extract_by_Mask = Extract_NLCD2
        Extract_NLCD2 = arcpy.sa.ExtractByMask(in_raster=NLCD_2016_Land_Cover, in_mask_data=Population_city_township_boundaries)
        Extract_NLCD2.save(Extract_by_Mask)


        # Process: Raster Calculator (Raster Calculator) (ia)
        band_1_raste = "c:\\users\\hossa084\\downloads\\arcii\\lab2\\files\\lab2\\lab2.gdb\\band_1_raste"
        Raster_Calculator = band_1_raste
        with arcpy.EnvManager(scratchWorkspace=r"C:\Users\hossa084\Downloads\ArcII\lab2\files\lab2\lab2.gdb", workspace=r"C:\Users\hossa084\Downloads\ArcII\lab2\files\lab2\lab2.gdb"):
            band_1_raste = Extract_NLCD2_2_ - Extract_NLCD2
            band_1_raste.save(Raster_Calculator)


        # Process: Is Null (Is Null) (ia)
        Output_raster_3_ = "C:\\Users\\hossa084\\Downloads\\ArcII\\lab2\\files\\lab2\\lab2.gdb\\IsNull_band_1"
        Is_Null = Output_raster_3_
        with arcpy.EnvManager(scratchWorkspace=r"C:\Users\hossa084\Downloads\ArcII\lab2\files\lab2\lab2.gdb", workspace=r"C:\Users\hossa084\Downloads\ArcII\lab2\files\lab2\lab2.gdb"):
            Output_raster_3_ = arcpy.ia.IsNull(in_raster=band_1_raste)
            Output_raster_3_.save(Is_Null)


        # Process: Reclassify (Reclassify) (3d)
        Output_raster = "C:\\Users\\hossa084\\Downloads\\ArcII\\lab2\\files\\lab2\\lab2.gdb\\Reclass_IsNu1"
        arcpy.ddd.Reclassify(in_raster=Output_raster_3_, reclass_field="VALUE", remap="", out_raster=Output_raster, missing_values="DATA")
        Output_raster = arcpy.Raster(Output_raster)

        # Process: Raster to Polygon (Raster to Polygon) (conversion)
        Output_polygon_features = "C:\\Users\\hossa084\\Downloads\\ArcII\\lab2\\files\\lab2\\lab2.gdb\\RasterT_Reclass1"
        arcpy.conversion.RasterToPolygon(in_raster=Output_raster, out_polygon_features=Output_polygon_features, simplify="SIMPLIFY", raster_field="", create_multipart_features="SINGLE_OUTER_PART", max_vertices_per_feature=None)

        # Process: Spatial Join (Spatial Join) (analysis)
        Output_Feature_Class_2_ = "C:\\Users\\hossa084\\Downloads\\ArcII\\lab2\\files\\lab2\\lab2.gdb\\city_township_unorg_SpatialJ"
        with arcpy.EnvManager(scratchWorkspace=r"C:\Users\hossa084\Downloads\ArcII\lab2\files\lab2\lab2.gdb", workspace=r"C:\Users\hossa084\Downloads\ArcII\lab2\files\lab2\lab2.gdb"):
            arcpy.analysis.SpatialJoin(target_features=stations_3_, join_features=Output_polygon_features, out_feature_class=Output_Feature_Class_2_, join_operation="JOIN_ONE_TO_ONE", join_type="KEEP_ALL", field_mapping="", match_option="INTERSECT", search_radius="", distance_field_name="")

        # Process: XY Table To Point (XY Table To Point) (management)
        Output_Feature_Class = "C:\\Users\\hossa084\\Downloads\\ArcII\\lab2\\files\\lab2\\lab2.gdb\\BMSBSurveyDataTable_XYTableToPoint1"
        arcpy.management.XYTableToPoint(in_table=BMSBSurveyDataTable, out_feature_class=Output_Feature_Class, x_field="Longitude", y_field="Latitude", z_field="", coordinate_system="GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]];-400 -400 1000000000;-100000 10000;-100000 10000;8.98315284119521E-09;0.001;0.001;IsHighPrecision")

        # Process: Join Field (2) (Join Field) (management)
        with arcpy.EnvManager(scratchWorkspace=r"C:\Users\hossa084\Downloads\ArcII\lab2\files\lab2\lab2.gdb", workspace=r"C:\Users\hossa084\Downloads\ArcII\lab2\files\lab2\lab2.gdb"):
            Final_database = arcpy.management.JoinField(in_data=Output_Feature_Class_2_, in_field="Join_Count", join_table=Output_Feature_Class, join_field="County", fields=[])[0]

        # Process: Gravity Model based on combined attractiveness field (Gravity Model) (gravity)
        GravityModel_bugs = "C:\\Users\\hossa084\\Downloads\\ArcII\\lab2\\files\\lab2\\lab2.gdb\\GravityModel_bugs"
        with arcpy.EnvManager(scratchWorkspace=r"C:\Users\hossa084\Downloads\ArcII\lab2\files\lab2\lab2.gdb", workspace=r"C:\Users\hossa084\Downloads\ArcII\lab2\files\lab2\lab2.gdb"):
            Probability_Matrix = arcpy.gravity.GravityModel(Destination_Features=Final_database, Destination_Name_Field="County", Destination_Attractiveness_Field="Nymphs", Origin_Features=city_township_boundaries, Output_Feature_Class=GravityModel_bugs, Search_Distance="")[0]

        # Process: Gravity Model based on bugs dataset (Gravity Model) (gravity)
        GravityModel_bugs_2_ = "C:\\Users\\hossa084\\Downloads\\ArcII\\lab2\\files\\lab2\\lab2.gdb\\GravityModel_bugs"
        with arcpy.EnvManager(scratchWorkspace=r"C:\Users\hossa084\Downloads\ArcII\lab2\files\lab2\lab2.gdb", workspace=r"C:\Users\hossa084\Downloads\ArcII\lab2\files\lab2\lab2.gdb"):
            Probability_Matrix_2_ = arcpy.gravity.GravityModel(Destination_Features=Final_database, Destination_Name_Field="County", Destination_Attractiveness_Field="Nymphs", Origin_Features=city_township_boundaries, Output_Feature_Class=GravityModel_bugs_2_, Search_Distance="")[0]

        # Process: Gravity Model based on population (Gravity Model) (gravity)
        GravityModel_bugs_3_ = "C:\\Users\\hossa084\\Downloads\\ArcII\\lab2\\files\\lab2\\lab2.gdb\\GravityModel_bugs"
        with arcpy.EnvManager(scratchWorkspace=r"C:\Users\hossa084\Downloads\ArcII\lab2\files\lab2\lab2.gdb", workspace=r"C:\Users\hossa084\Downloads\ArcII\lab2\files\lab2\lab2.gdb"):
            Probability_Matrix_3_ = arcpy.gravity.GravityModel(Destination_Features=Final_database, Destination_Name_Field="County", Destination_Attractiveness_Field="Nymphs", Origin_Features=city_township_boundaries, Output_Feature_Class=GravityModel_bugs_3_, Search_Distance="")[0]

if __name__ == '__main__':
    Model()
